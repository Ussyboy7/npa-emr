# Generated by Django 5.2.6 on 2025-09-12 19:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_type', models.CharField(choices=[('Employee', 'Employee'), ('Retiree', 'Retiree'), ('NonNPA', 'NonNPA'), ('Dependent', 'Dependent')], max_length=20)),
                ('dependent_type', models.CharField(blank=True, choices=[('Employee Dependent', 'Employee Dependent'), ('Retiree Dependent', 'Retiree Dependent')], max_length=30, null=True)),
                ('personal_number', models.CharField(blank=True, max_length=50, null=True)),
                ('sponsor_id', models.CharField(blank=True, max_length=50, null=True)),
                ('title', models.CharField(blank=True, max_length=10, null=True)),
                ('surname', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('division', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], max_length=20, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('residential_address', models.TextField(blank=True, null=True)),
                ('state_of_residence', models.CharField(blank=True, choices=[('Abia', 'Abia'), ('Adamawa', 'Adamawa'), ('Akwa Ibom', 'Akwa Ibom'), ('Anambra', 'Anambra'), ('Bauchi', 'Bauchi'), ('Bayelsa', 'Bayelsa'), ('Benue', 'Benue'), ('Borno', 'Borno'), ('Cross River', 'Cross River'), ('Delta', 'Delta'), ('Ebonyi', 'Ebonyi'), ('Edo', 'Edo'), ('Ekiti', 'Ekiti'), ('Enugu', 'Enugu'), ('FCT', 'FCT'), ('Gombe', 'Gombe'), ('Imo', 'Imo'), ('Jigawa', 'Jigawa'), ('Kaduna', 'Kaduna'), ('Kano', 'Kano'), ('Katsina', 'Katsina'), ('Kebbi', 'Kebbi'), ('Kogi', 'Kogi'), ('Kwara', 'Kwara'), ('Lagos', 'Lagos'), ('Nasarawa', 'Nasarawa'), ('Niger', 'Niger'), ('Ogun', 'Ogun'), ('Ondo', 'Ondo'), ('Osun', 'Osun'), ('Oyo', 'Oyo'), ('Plateau', 'Plateau'), ('Rivers', 'Rivers'), ('Sokoto', 'Sokoto'), ('Taraba', 'Taraba'), ('Yobe', 'Yobe'), ('Zamfara', 'Zamfara')], max_length=50, null=True)),
                ('permanent_address', models.TextField(blank=True, null=True)),
                ('state_of_origin', models.CharField(blank=True, choices=[('Abia', 'Abia'), ('Adamawa', 'Adamawa'), ('Akwa Ibom', 'Akwa Ibom'), ('Anambra', 'Anambra'), ('Bauchi', 'Bauchi'), ('Bayelsa', 'Bayelsa'), ('Benue', 'Benue'), ('Borno', 'Borno'), ('Cross River', 'Cross River'), ('Delta', 'Delta'), ('Ebonyi', 'Ebonyi'), ('Edo', 'Edo'), ('Ekiti', 'Ekiti'), ('Enugu', 'Enugu'), ('FCT', 'FCT'), ('Gombe', 'Gombe'), ('Imo', 'Imo'), ('Jigawa', 'Jigawa'), ('Kaduna', 'Kaduna'), ('Kano', 'Kano'), ('Katsina', 'Katsina'), ('Kebbi', 'Kebbi'), ('Kogi', 'Kogi'), ('Kwara', 'Kwara'), ('Lagos', 'Lagos'), ('Nasarawa', 'Nasarawa'), ('Niger', 'Niger'), ('Ogun', 'Ogun'), ('Ondo', 'Ondo'), ('Osun', 'Osun'), ('Oyo', 'Oyo'), ('Plateau', 'Plateau'), ('Rivers', 'Rivers'), ('Sokoto', 'Sokoto'), ('Taraba', 'Taraba'), ('Yobe', 'Yobe'), ('Zamfara', 'Zamfara')], max_length=50, null=True)),
                ('local_government_area', models.CharField(blank=True, max_length=100, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=5, null=True)),
                ('genotype', models.CharField(blank=True, choices=[('AA', 'AA'), ('AS', 'AS'), ('AC', 'AC'), ('SS', 'SS')], max_length=5, null=True)),
                ('non_npa_type', models.CharField(blank=True, choices=[('Police', 'Police'), ('IT', 'IT'), ('NYSC', 'NYSC'), ('CSR', 'CSR'), ('MD Outfit', 'MD Outfit'), ('Board Member', 'Board Member'), ('Seaview', 'Seaview')], max_length=20, null=True)),
                ('relationship', models.CharField(blank=True, choices=[('Spouse', 'Spouse'), ('Parent', 'Parent'), ('Sibling', 'Sibling'), ('Child', 'Child')], max_length=20, null=True)),
                ('nok_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('nok_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('nok_relationship', models.CharField(blank=True, choices=[('Spouse', 'Spouse'), ('Parent', 'Parent'), ('Sibling', 'Sibling'), ('Child', 'Child')], max_length=20, null=True)),
                ('nok_address', models.TextField(blank=True, null=True)),
                ('nok_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='patient_photos/')),
                ('patient_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('last_visit', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MedicalReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_number', models.CharField(max_length=50)),
                ('report_name', models.CharField(max_length=200)),
                ('report_type', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('doctor', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('cancelled', 'Cancelled')], max_length=20)),
                ('download_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='medical_records.patient')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='TimelineEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('type', models.CharField(choices=[('registration', 'Registration'), ('nursing', 'Nursing'), ('consultation', 'Consultation'), ('laboratory', 'Laboratory'), ('radiology', 'Radiology'), ('pharmacy', 'Pharmacy'), ('discharge', 'Discharge'), ('admission', 'Admission')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=100)),
                ('staff', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('in-progress', 'In Progress'), ('pending', 'Pending'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('duration', models.IntegerField(blank=True, help_text='Duration in minutes', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('related_record_id', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline_events', to='medical_records.patient')),
            ],
            options={
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_date', models.DateField()),
                ('visit_time', models.TimeField()),
                ('visit_location', models.CharField(choices=[('Bode Thomas Clinic', 'Bode Thomas Clinic'), ('Headquarters', 'Headquarters'), ('Tincan', 'Tincan'), ('LPC', 'LPC'), ('Rivers Port Complex', 'Rivers Port Complex'), ('Onne Port Complex', 'Onne Port Complex'), ('Delta Port Complex', 'Delta Port Complex'), ('Calabar Port', 'Calabar Port'), ('Lekki Deep Sea Port', 'Lekki Deep Sea Port')], max_length=100)),
                ('visit_type', models.CharField(choices=[('consultation', 'Consultation'), ('follow-up', 'Follow-up'), ('emergency', 'Emergency'), ('routine-checkup', 'Routine Checkup'), ('vaccination', 'Vaccination')], max_length=20)),
                ('clinic', models.CharField(choices=[('General', 'General'), ('Physiotherapy', 'Physiotherapy'), ('Eye', 'Eye'), ('Sickle Cell', 'Sickle Cell'), ('Dental', 'Dental'), ('Cardiology', 'Cardiology')], max_length=20)),
                ('priority', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Emergency', 'Emergency')], default='Medium', max_length=10)),
                ('status', models.CharField(choices=[('Scheduled', 'Scheduled'), ('Confirmed', 'Confirmed'), ('In Progress', 'In Progress'), ('In Nursing Pool', 'In Nursing Pool'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled'), ('Rescheduled', 'Rescheduled')], default='Scheduled', max_length=20)),
                ('special_instructions', models.TextField(blank=True, null=True)),
                ('assigned_nurse', models.CharField(blank=True, max_length=100, null=True)),
                ('nursing_received_at', models.DateTimeField(blank=True, null=True)),
                ('patient_name', models.CharField(blank=True, max_length=200, null=True)),
                ('personal_number', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visits', to='medical_records.patient')),
            ],
            options={
                'ordering': ['-visit_date', '-visit_time'],
            },
        ),
        migrations.CreateModel(
            name='VitalReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('systolic', models.IntegerField(blank=True, null=True)),
                ('diastolic', models.IntegerField(blank=True, null=True)),
                ('heart_rate', models.IntegerField(blank=True, null=True)),
                ('blood_sugar', models.FloatField(blank=True, null=True)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('recorded_by', models.CharField(blank=True, max_length=100, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vitals', to='medical_records.patient')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
    ]
