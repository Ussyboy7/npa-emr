# Generated by Django 5.2.6 on 2025-09-23 14:57

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('medical_records', '0009_alter_dependent_state_of_origin_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('generic_name', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(choices=[('Antibiotics', 'Antibiotics'), ('Analgesics', 'Analgesics'), ('Cardiovascular', 'Cardiovascular'), ('Diabetes', 'Diabetes'), ('Respiratory', 'Respiratory'), ('Vitamins', 'Vitamins'), ('Gastrointestinal', 'Gastrointestinal'), ('Dermatology', 'Dermatology'), ('Neurology', 'Neurology'), ('Other', 'Other')], max_length=100)),
                ('strength', models.CharField(max_length=100)),
                ('dosage_form', models.CharField(max_length=100)),
                ('manufacturer', models.CharField(max_length=255)),
                ('supplier', models.CharField(max_length=255)),
                ('current_stock', models.IntegerField(default=0)),
                ('minimum_stock', models.IntegerField(default=0)),
                ('maximum_stock', models.IntegerField(default=0)),
                ('pack_size', models.IntegerField(default=1)),
                ('location', models.CharField(max_length=100)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('prescription_required', models.BooleanField(default=True)),
                ('is_generic', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='visit',
            name='consultation_room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visits', to='medical_records.consultationroom'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='state_of_origin',
            field=models.CharField(blank=True, choices=[('Abia', 'Abia'), ('Adamawa', 'Adamawa'), ('Akwa Ibom', 'Akwa Ibom'), ('Anambra', 'Anambra'), ('Bauchi', 'Bauchi'), ('Bayelsa', 'Bayelsa'), ('Benue', 'Benue'), ('Borno', 'Borno'), ('Cross River', 'Cross River'), ('Delta', 'Delta'), ('Ebonyi', 'Ebonyi'), ('Edo', 'Edo'), ('Ekiti', 'Ekiti'), ('Enugu', 'Enugu'), ('FCT', 'FCT'), ('Gombe', 'Gombe'), ('Imo', 'Imo'), ('Jigawa', 'Jigawa'), ('Kaduna', 'Kano'), ('Kano', 'Kano'), ('Katsina', 'Katsina'), ('Kebbi', 'Kebbi'), ('Kogi', 'Kogi'), ('Kwara', 'Kwara'), ('Lagos', 'Lagos'), ('Nasarawa', 'Nasarawa'), ('Niger', 'Niger'), ('Ogun', 'Ogun'), ('Ondo', 'Ondo'), ('Osun', 'Osun'), ('Oyo', 'Oyo'), ('Plateau', 'Plateau'), ('Rivers', 'Rivers'), ('Sokoto', 'Sokoto'), ('Taraba', 'Taraba'), ('Yobe', 'Yobe'), ('Zamfara', 'Zamfara')], max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='patient',
            name='state_of_residence',
            field=models.CharField(blank=True, choices=[('Abia', 'Abia'), ('Adamawa', 'Adamawa'), ('Akwa Ibom', 'Akwa Ibom'), ('Anambra', 'Anambra'), ('Bauchi', 'Bauchi'), ('Bayelsa', 'Bayelsa'), ('Benue', 'Benue'), ('Borno', 'Borno'), ('Cross River', 'Cross River'), ('Delta', 'Delta'), ('Ebonyi', 'Ebonyi'), ('Edo', 'Edo'), ('Ekiti', 'Ekiti'), ('Enugu', 'Enugu'), ('FCT', 'FCT'), ('Gombe', 'Gombe'), ('Imo', 'Imo'), ('Jigawa', 'Jigawa'), ('Kaduna', 'Kano'), ('Kano', 'Kano'), ('Katsina', 'Katsina'), ('Kebbi', 'Kebbi'), ('Kogi', 'Kogi'), ('Kwara', 'Kwara'), ('Lagos', 'Lagos'), ('Nasarawa', 'Nasarawa'), ('Niger', 'Niger'), ('Ogun', 'Ogun'), ('Ondo', 'Ondo'), ('Osun', 'Osun'), ('Oyo', 'Oyo'), ('Plateau', 'Plateau'), ('Rivers', 'Rivers'), ('Sokoto', 'Sokoto'), ('Taraba', 'Taraba'), ('Yobe', 'Yobe'), ('Zamfara', 'Zamfara')], max_length=50, null=True),
        ),
        migrations.CreateModel(
            name='MedicationBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('batch_number', models.CharField(max_length=100)),
                ('expiry_date', models.DateField()),
                ('total_tablets', models.IntegerField()),
                ('remaining_tablets', models.IntegerField(default=0)),
                ('date_received', models.DateField(auto_now_add=True)),
                ('pack_size', models.IntegerField()),
                ('packs_received', models.IntegerField()),
                ('opened_packs', models.IntegerField(default=0)),
                ('sealed_packs', models.IntegerField(default=0)),
                ('supplier', models.CharField(max_length=255)),
                ('status', models.CharField(default='Active', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='medical_records.medication')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(default='Pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='medical_records.visit')),
            ],
        ),
        migrations.CreateModel(
            name='PharmacyQueue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(default='Pending', max_length=20)),
                ('priority', models.CharField(default='Medium', max_length=20)),
                ('wait_time_minutes', models.IntegerField(default=0)),
                ('estimated_wait', models.IntegerField(blank=True, null=True)),
                ('pharmacist_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_pharmacist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='medical_records.user')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queue', to='medical_records.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='PrescriptionItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dosage', models.CharField(max_length=100)),
                ('frequency', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=100)),
                ('route', models.CharField(max_length=100)),
                ('quantity', models.IntegerField()),
                ('instructions', models.TextField(blank=True, null=True)),
                ('status', models.CharField(default='Pending', max_length=20)),
                ('dispensed_quantity', models.IntegerField(blank=True, null=True)),
                ('dispensed_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dispensed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='medical_records.user')),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medical_records.medication')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='medical_records.prescription')),
                ('substituted_with', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='substitutes', to='medical_records.medication')),
            ],
        ),
        migrations.CreateModel(
            name='StockTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=20)),
                ('quantity', models.IntegerField()),
                ('previous_stock', models.IntegerField()),
                ('new_stock', models.IntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('time', models.TimeField(auto_now_add=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='medical_records.medication')),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='medical_records.user')),
                ('prescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='medical_records.prescription')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='medical_records.visit')),
            ],
        ),
        migrations.DeleteModel(
            name='Dependent',
        ),
    ]
